<?php

/**
 * Home Page
 */
Route::get('/', 'Site\PagesController@home')->name('home');

/**
 * get Static Pages
 */
$static_pages = route_getStaticPages();
\Illuminate\Support\Facades\Config::set('static_pages', $static_pages);

/**
 *  Set Site routes
 */
foreach ($static_pages as $static_page) {
    Route::get($static_page->slug,  'Site\PagesController@page')->name('static-page.'.$static_page->page_type);
}

/**
 *  Auth Routes
 */
Route::group(['middleware' => ['guest']], function () {
    Route::get('signup', 'Site\RegisterController@signup')->name('signup');
    Route::get('confirm', 'Site\RegisterController@confirm')->name('confirm');
    Route::post('register', 'Site\RegisterController@register')->name('register');
    Route::get('registered', 'Site\RegisterController@registered')->name('registered');
    Route::get('password-forgot', 'Site\ForgotPasswordController@showLinkRequestForm')->name('password.forgot');
    Route::post('password-forgot', 'Site\ForgotPasswordController@sendResetLinkEmail')->name('password.forgot');
    Route::get('password-reset', 'Site\ForgotPasswordController@restorePasswordForm')->name('password.reset');
    Route::post('password-reset', 'Site\ForgotPasswordController@restorePassword')->name('password.reset');
});

/**
 *  Logout
 */
Route::get('logout', 'Site\LoginController@logout')->name('logout');

/**
 *  AUTH-ONLY ROUTES
 */
Route::group(['middleware' => ['auth']], function () {
    /**
     *  Accounts
     *  always allow access to accounts and subscriptions (if logged in)
     */
    Route::get('accounts', 'AccountsController@index')->name('accounts');
    Route::get('accounts/change/{id}', 'AccountsController@change')->name('accounts.change');
    Route::post('accounts/updateCreditCard', 'AccountsController@updateCreditCard')->name('accounts.update-cc');

    /**
     * General routes
     */
    Route::get('doc-templates/loopsTinymce', 'DocTemplatesController@loopsTinymce')->name('doc-templates.loops.tinymce');
    Route::post('export/filter-countries', 'ExportsController@filterCountries')->name('export.filter-countries');
});


/**
 *  AUTH and ACCOUNTS ROUTES
 */
Route::group(['middleware' => ['auth', 'accounts']], function () {
    Route::get('accounts/subscription', 'AccountsController@subscription')->name('accounts.subscription');
});


/**
 *  MODULES ROUTES
 */
Route::group(['middleware' => ['auth', 'accounts', 'subscriptions', 'modules', 'permissions']], function () {
    /**
     *  Accounts
     */
    Route::get('dashboard', 'AccountsController@dashboard')->name('dashboard');
    Route::get('accounts/settings', 'AccountsController@settings')->name('accounts.settings');

    /**
     * get modules and module_routes
     */
    $routes = route_getModuleRoutes();
    $modules = route_getModules();

    /**
     * set into config to be used throughout the application
     */
    \Illuminate\Support\Facades\Config::set('modules', $modules);
    \Illuminate\Support\Facades\Config::set('module_routes', $routes);

    /**
     *  Set routes
     */
    foreach ($routes as $route) {
        $method = $route->method;
        Route::$method($route->url, $route->action)->name($route->name);
    }

}); // Route Group END




/**
 *  ADMIN routing
 */
Route::group(['prefix' => 'admin', 'namespace' => 'Admin', 'middleware' => ['auth', 'admin']], function () {

    Route::get('admins/tmp', 'AdminsController@tmp', ['as' => 'admin']);

    Route::resource('users', 'UsersController', ['as' => 'admin']);
    Route::resource('faqs', 'FaqsController', ['as' => 'admin']);
    Route::resource('countries', 'CountriesController', [
        'as' => 'admin',
        'except' => [
            'destroy'
        ]
    ]);
    Route::resource('regions', 'RegionsController', [
        'as' => 'admin',
        'except' => [
            'destroy'
        ]
    ]);
    Route::resource('proficiencies', 'ProficienciesController', [
        'as' => 'admin',
        'except' => [
            'show'
        ]
    ]);
    Route::resource('static-pages', 'StaticPagesController', [
        'as' => 'admin',
        'except' => [
            'destroy'
        ]
    ]);
    Route::resource('email-templates', 'EmailTemplatesController', [
        'as' => 'admin',
        'only' => [
            'edit',
            'update',
            'index'
        ]
    ]);

    Route::resource('sample-templates', 'SampleTemplatesController', [
        'as' => 'admin'
    ]);
    Route::resource('doc-templates', 'DocTemplatesController', [
        'as' => 'admin',
        'only' => [
            'edit',
            'update',
            'index'
        ]
    ]);
    Route::resource('doc-templates-vars', 'DocTemplatesVarsController', [
        'as' => 'admin',
        'only' => [
            'edit',
            'update',
            'index'
        ]
    ]);
    Route::resource('plans', 'PlansController', [
        'as' => 'admin',
        'except' => [
            'destroy'
        ]
    ]);
});
kmdslkdsmlsk dsmldmslmlsm

